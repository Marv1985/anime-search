{"ast":null,"code":"var _jsxFileName = \"/home/marv/the-odin-project/react-projects/anime-search/src/Leaderboard/LeaderBoard.js\";\nimport \"/home/marv/the-odin-project/react-projects/anime-search/src/Leaderboard/leaderboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeaderBoard(props) {\n  const {\n    lists\n  } = props;\n\n  /* const removeQuotes = string => string.replaceAll(\"\\\"\", \"\").replaceAll(\"{\",\"\").replaceAll(\"}\",\"\").replaceAll(\"[\",\"\").replaceAll(\"]\",\"\").replaceAll(\",\",\"\"); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LEADERBOARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-output\",\n        children: lists.map(list => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [list.data.name, \" \", list.data.gulp]\n        }, list.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = LeaderBoard;\nvar _c;\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"names":["LeaderBoard","props","lists","map","list","data","name","gulp","id"],"sources":["/home/marv/the-odin-project/react-projects/anime-search/src/Leaderboard/LeaderBoard.js"],"sourcesContent":["import \"/home/marv/the-odin-project/react-projects/anime-search/src/Leaderboard/leaderboard.css\";\n\nexport default function LeaderBoard(props) {\n  const { lists } = props;\n\n  /* const removeQuotes = string => string.replaceAll(\"\\\"\", \"\").replaceAll(\"{\",\"\").replaceAll(\"}\",\"\").replaceAll(\"[\",\"\").replaceAll(\"]\",\"\").replaceAll(\",\",\"\"); */\n\n  return (\n    <div className=\"leaderboard-wrapper\">\n      <div className=\"leaderboard\">\n        <h1>LEADERBOARD</h1>\n        <div className=\"board-output\">\n          {lists.map((list) => (\n            <p key={list.id}>{list.data.name} {list.data.gulp}</p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAO,yFAAyF;AAAC;AAEjG,eAAe,SAASA,WAAW,CAACC,KAAK,EAAE;EACzC,MAAM;IAAEC;EAAM,CAAC,GAAGD,KAAK;;EAEvB;;EAEA,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,uBAClC;MAAK,SAAS,EAAC,aAAa;MAAA,wBAC1B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAK,SAAS,EAAC,cAAc;QAAA,UAC1BC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACd;UAAA,WAAkBA,IAAI,CAACC,IAAI,CAACC,IAAI,OAAGF,IAAI,CAACC,IAAI,CAACE,IAAI;QAAA,GAAzCH,IAAI,CAACI,EAAE;UAAA;UAAA;UAAA;QAAA,QAChB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KAjBuBR,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}